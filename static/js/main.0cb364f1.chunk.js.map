{"version":3,"sources":["skills/Skills.module.css","skills/skill/Skill.module.css","common/styles/Container.module.css","main/Main.module.css","header/Header.module.css","nav/Nav.module.css","nav/Nav.js","header/Header.js","main/Main.js","skills/skill/Skill.js","skills/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","style","nav","href","Header","header","Main","mainBlock","styleContainer","container","text","photo","Skill","props","skill","icon","title","description","decription","Skills","skillsBlock","skillsContainer","skills","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,gBAAkB,gCAAgC,MAAQ,sBAAsB,OAAS,yB,gBCArJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,gBCAtDD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,MAAQ,sB,kBCAxFD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,mB,+LCcTC,MAXf,WACI,OACI,yBAAKC,UAAWC,IAAMC,KAClB,uBAAGC,KAAK,IAAR,8CACA,uBAAGA,KAAK,IAAR,wCACA,uBAAGA,KAAK,IAAR,8CACA,uBAAGA,KAAK,IAAR,sDCGGC,MARf,WACI,OACI,yBAAKJ,UAAWC,IAAMI,QAClB,kBAAC,EAAD,Q,gCCaGC,MAff,WACI,OACI,yBAAKN,UAAWC,IAAMM,WAClB,yBAAKP,UAAWQ,IAAeC,WAC/B,yBAAKT,UAAWC,IAAMS,MAClB,0CACA,kDACA,mDAEJ,yBAAKV,UAAWC,IAAMU,W,gCCEnBC,MAbf,SAAeC,GACX,OACI,yBAAKb,UAAWC,IAAMa,OAClB,yBAAKd,UAAWC,IAAMc,OACtB,wBAAIf,UAAWC,IAAMe,OAAQH,EAAMG,OACnC,0BAAMhB,UAAWC,IAAMgB,aAAcJ,EAAMK,cCYxCC,MAff,WACI,OACI,yBAAKnB,UAAWC,IAAMmB,aAClB,yBAAKpB,UAAS,UAAMQ,IAAeC,UAArB,YAAkCR,IAAMoB,kBAClD,wBAAIrB,UAAWC,IAAMe,OAArB,aACA,yBAAKhB,UAAWC,IAAMqB,QAClB,kBAAC,EAAD,CAAON,MAAO,KAAME,WAAY,6FAChC,kBAAC,EAAD,CAAOF,MAAO,MAAOE,WAAY,6FACjC,kBAAC,EAAD,CAAOF,MAAO,QAASE,WAAY,iGCMxCK,MAXf,WACE,OACE,yBAAKvB,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFYwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0cb364f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillsBlock\":\"Skills_skillsBlock__2sr8t\",\"skillsContainer\":\"Skills_skillsContainer__3nPnf\",\"title\":\"Skills_title__3XJ3A\",\"skills\":\"Skills_skills__tezkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"Skill_skill__2YpPl\",\"icon\":\"Skill_icon__Bni2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__cBAN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Main_mainBlock__2iLoX\",\"text\":\"Main_text__38Zvz\",\"photo\":\"Main_photo__2J2oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2KiAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3VNoM\"};","import React from 'react';\r\nimport style from \"./Nav.module.css\"\r\n\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div className={style.nav}>\r\n            <a href=\"\">Главная</a>\r\n            <a href=\"\">Скиллы</a>\r\n            <a href=\"\">Проекты</a>\r\n            <a href=\"\">Контакты</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport style from \"./Header.module.css\"\r\nimport Nav from \"../nav/Nav\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <Nav />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from \"./Main.module.css\"\r\nimport styleContainer from \"../common/styles/Container.module.css\"\r\n\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className={style.mainBlock}>\r\n            <div className={styleContainer.container}>\r\n            <div className={style.text}>\r\n                <span>Hi There</span>\r\n                <h1>I am Jeffrey Aaron</h1>\r\n                <p>Front end developer</p>\r\n            </div>\r\n            <div className={style.photo}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport style from \"./Skill.module.css\"\r\n\r\n\r\nfunction Skill(props) {\r\n    return (\r\n        <div className={style.skill}>\r\n            <div className={style.icon}></div>\r\n            <h3 className={style.title}>{props.title}</h3>\r\n            <span className={style.description}>{props.decription}\r\n\r\n            </span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skill;","import React from 'react';\r\nimport style from \"./Skills.module.css\"\r\nimport styleContainer from \"../common/styles/Container.module.css\"\r\nimport Skill from \"./skill/Skill\";\r\n\r\n\r\nfunction Skills() {\r\n    return (\r\n        <div className={style.skillsBlock}>\r\n            <div className= {`${styleContainer.container} ${style.skillsContainer}`}>\r\n                <h2 className={style.title}>MY SKILLS</h2>\r\n                <div className={style.skills}>\r\n                    <Skill title={\"JS\"} decription={\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam eos esse eum explicabo\"}/>\r\n                    <Skill title={\"CSS\"} decription={\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam eos esse eum explicabo\"}/>\r\n                    <Skill title={\"React\"} decription={\"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam eos esse eum explicabo\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\nimport './App.css';\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\nimport Skills from \"./skills/Skills\";\nimport Skill from \"./skills/skill/Skill\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n        <Main />\n        <Skills />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}